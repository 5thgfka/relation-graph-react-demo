import { RelationGraphWith3Image } from './RelationGraphWith3Image';
import { RGElementLine, RGLine, RGLink, RGListeners, RGNode, RGOptions, RGPosition } from '../types';
export type RGLineTextPosition = {
    x: number;
    y: number;
    rotate: number;
};
export type CreateJunctionPointParams = [
    from_x: number,
    from_y: number,
    to_x: number,
    to_y: number,
    f_W: number,
    f_H: number,
    t_W: number,
    t_H: number,
    nodeShape: number,
    isReverse: number,
    allLineSize: number,
    ri: number
];
export declare class RelationGraphWith4Line extends RelationGraphWith3Image {
    constructor(options: RGOptions, listeners: RGListeners);
    createReturnValue(path: string, textPosition: RGLineTextPosition): {
        path: string;
        textPosition: RGLineTextPosition;
    };
    createLinePath(link: RGLink | RGElementLine, relationData: RGLine, ri: number): {
        path: string;
        textPosition: RGLineTextPosition;
    };
    private _getJunctionPoint;
    createLinePathByTwoNode(from: RGNode, to: RGNode, relationData: RGLine, ri?: number, allLineSize?: number): {
        path: string;
        textPosition: RGLineTextPosition;
    };
    calcCurveCenter(start: RGPosition, ctrl1: RGPosition, ctrl2: RGPosition, end: RGPosition): {
        x: number;
        y: number;
    };
    createCheckedLinePath(): string;
    createCheckedLineStrokeWidth(): number;
    getTextTransform(thisRelation: RGLine, x: number, y: number, rotate: number): string;
    getArrow(thisRelation: RGLine, link: RGLink | RGElementLine, isStartArrow?: boolean): string;
}
